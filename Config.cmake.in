include(CMakeFindDependencyMacro)
find_dependency(ROOT QUIET REQUIRED COMPONENTS Gpad)

@PACKAGE_INIT@

set(Pandora_known_comps static shared)
set(Pandora_comp_static NO)
set(Pandora_comp_shared NO)

foreach (Pandora_comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
    if (Pandora_comp IN_LIST Pandora_known_comps)
        set(Pandora_comp_${Pandora_comp} YES)
    else ()
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
            "Pandora does not recognize component `${Pandora_comp}`.")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
        return()
    endif ()
endforeach ()

if (Pandora_comp_static AND Pandora_comp_shared)
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
        "Pandora `static` and `shared` components are mutually exclusive.")
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    return()
endif ()

set(Pandora_static_targets "${CMAKE_CURRENT_LIST_DIR}/Pandora-static-targets.cmake")
set(Pandora_shared_targets "${CMAKE_CURRENT_LIST_DIR}/Pandora-shared-targets.cmake")

macro(Pandora_load_targets type)
    if (NOT EXISTS "${Pandora_${type}_targets}")
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
            "Pandora `${type}` libraries were requested but not found.")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
        return()
    endif ()
    include("${Pandora_${type}_targets}")
endmacro()

if (Pandora_comp_static)
    Pandora_load_targets(static)
elseif (Pandora_comp_shared)
    Pandora_load_targets(shared)
elseif (DEFINED Pandora_SHARED_LIBS AND Pandora_SHARED_LIBS)
    Pandora_load_targets(shared)
elseif (DEFINED Pandora_SHARED_LIBS AND NOT Pandora_SHARED_LIBS)
    Pandora_load_targets(static)
elseif (BUILD_SHARED_LIBS)
    if (EXISTS "${Pandora_shared_targets}")
        Pandora_load_targets(shared)
    else ()
        Pandora_load_targets(static)
    endif ()
else ()
    if (EXISTS "${Pandora_static_targets}")
        Pandora_load_targets(static)
    else ()
        Pandora_load_targets(shared)
    endif ()
endif ()

check_required_components(Pandora)
